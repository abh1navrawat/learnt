super (keyword) used to 1) refer immediate parent class instance variable or method.
              super() 2) used to invoke parent class constructor.

Instance initializer block - used to initialize the instance data member. It run each time when object of the class is created.
              Used to perform some operations while assigning value to instance data member.

Final (keyword) - restrict the user fron overriding/manipulating variable,classes, methods (instance of a class).
        
runtime polymorphism -  a process in which a call to an overridden method is resolved at runtime rather than compile-time(use upcasting).


upcasting - If the reference variable of Parent class refers to the object of Child class
example of upcasting - 

class Bike{  
  void run(){System.out.println("running");}  
}  
class Splendor extends Bike{  
  void run(){System.out.println("running safely with 60km");}  
  
  public static void main(String args[]){  
    Bike b = new Splendor();//upcasting  
    b.run();  
  }  
} 

downcasting - When Subclass type refers to the object of Parent class. Cant be performed directly(compilation error).If we use typecasting it will compile but ClassCastException is thrown at runtime.But downcasting is possible with instanceof operator.

Binding - connecting the method call to method body(types of binding - static binding and dynamic binding)
        static binding - when type of object is determined at compile time
        dynamic binding - when type of object is determined at runtime 

instanceof(keyword) - used to test whether the object is an instance of the specified type.
example of instanceof

class Simple1{  
 public static void main(String args[]){  
 Simple1 s=new Simple1();  
 System.out.println(s instanceof Simple1);//true  
 }  
}  

Abstraction - Hiding internal details,only howing usage to the user. There are two ways to achieve abstraction -1)Abstract class   2)interface

Abstract keyword is used to declare abstract class. ex - abstract class A{}
It can proveide from 0 to 100 abstaction depending on our need.

interface is implemented by using interface keyword .ex - interface <interface_name>. 
interface provide total abstraction( means all the methods in an interface are declared with the empty body, and all the fields are public, static and final by default)
A class that implement a interface must declare all the method declared in an interface.
