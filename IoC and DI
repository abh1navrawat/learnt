Inversion of Control (IoC) - 

Is a principle which basically means that the control of the object or a portion of the program is given to framework or container.

Normally in our code we call the libraries but IoC let the framework make those calls

To enable this, frameworks use abstractions with additional behavior built.



The advantages of this architecture are:

1) decoupling the execution of a task from its implementation
2) making it easier to switch between different implementations
3) greater modularity of a program
4) greater ease in testing a program by isolating a component or mocking its dependencies, and allowing components to communicate through contracts






Dependency Injection (DI) - 

